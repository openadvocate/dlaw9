{#
/**
 * @file
 * Bootstrap Barrio's theme implementation to display a node.
 *
 * Available variables:
 * - node: The node entity with limited access to object properties and methods.
     Only "getter" methods (method names starting with "get", "has", or "is")
     and a few common methods such as "id" and "label" are available. Calling
     other methods (such as node.delete) will result in an exception.
 * - label: The title of the node.
 * - content: All node items. Use {{ content }} to print them all,
 *   or print a subset such as {{ content.field_example }}. Use
 *   {{ content|without('field_example') }} to temporarily suppress the printing
 *   of a given child element.
 * - author_picture: The node author user entity, rendered using the "compact"
 *   view mode.
 * - metadata: Metadata for this node.
 * - date: Themed creation date field.
 * - author_name: Themed author name field.
 * - url: Direct URL of the current node.
 * - display_submitted: Whether submission information should be displayed.
 * - attributes: HTML attributes for the containing element.
 *   The attributes.class element may contain one or more of the following
 *   classes:
 *   - node: The current template type (also known as a "theming hook").
 *   - node--type-[type]: The current node type. For example, if the node is an
 *     "Article" it would result in "node--type-article". Note that the machine
 *     name will often be in a short form of the human readable label.
 *   - node--view-mode-[view_mode]: The View Mode of the node; for example, a
 *     teaser would result in: "node--view-mode-teaser", and
 *     full: "node--view-mode-full".
 *   The following are controlled through the node publishing options.
 *   - node--promoted: Appears on nodes promoted to the front page.
 *   - node--sticky: Appears on nodes ordered above other non-sticky nodes in
 *     teaser listings.
 *   - node--unpublished: Appears on unpublished nodes visible only to site
 *     admins.
 * - title_attributes: Same as attributes, except applied to the main title
 *   tag that appears in the template.
 * - content_attributes: Same as attributes, except applied to the main
 *   content tag that appears in the template.
 * - author_attributes: Same as attributes, except applied to the author of
 *   the node tag that appears in the template.
 * - title_prefix: Additional output populated by modules, intended to be
 *   displayed in front of the main title tag that appears in the template.
 * - title_suffix: Additional output populated by modules, intended to be
 *   displayed after the main title tag that appears in the template.
 * - view_mode: View mode; for example, "teaser" or "full".
 * - teaser: Flag for the teaser state. Will be true if view_mode is 'teaser'.
 * - page: Flag for the full page state. Will be true if view_mode is 'full'.
 * - readmore: Flag for more state. Will be true if the teaser content of the
 *   node cannot hold the main body content.
 * - logged_in: Flag for authenticated user status. Will be true when the
 *   current user is a logged-in member.
 * - is_admin: Flag for admin user status. Will be true when the current user
 *   is an administrator.
 *
 * @see template_preprocess_node()
 */
#}
{{ attach_library('bootstrap_barrio/node') }}

{% set website = content.field_contact_website["#items"][0].value %}

{%
  set classes = [
    'node',
    'node--type-' ~ node.bundle|clean_class,
    node.isPromoted() ? 'node--promoted',
    node.isSticky() ? 'node--sticky',
    not node.isPublished() ? 'node--unpublished',
    view_mode ? 'node--view-mode-' ~ view_mode|clean_class,
    'clearfix',
  ]
%}
<article{{ attributes.addClass(classes) }}>

  <div class="page-content__top">
    <h1>{{"Contact" | t}}</h1>
  </div>

  <div{{ content_attributes.addClass('node__content', 'clearfix') }}>

    <div class="view-content">
      <div class="topic-list__lhs">
        <div class="contact__body">
          {{ contact_page_title[0] }}
        </div>

        <div class="contact__addy">
          <span>{{ "Address: " | t }}</span>
          {{ content.field_contact_address }}
        </div>

        <div class="contact__phone">
          <span>{{ "Phone: " | t }}</span>
          {{ content.field_contact_phone }}
        </div>

        {% if website %}
          <div class="contact__website">
            <span>{{ "Website: " | t }}</span>
            {{ link(website.uri, website.uri, {'class': [], 'target':'_blank'}) }}
          </div>
        {% endif %}

        <div class="contact__email">
          <span>{{ "Email: " | t }}</span>
          {{ content.field_contact_email }}
        </div>

        <div class="contact__fax">
          <span>{{ "Fax: " | t }}</span>
          {{ content.field_contact_fax }}
        </div>


        {% if content.field_tags[0] %}
          <div class="contact__tags">
            <span>{{ "Counties Served: " | t }}</span>
            {{ content.field_tags }}
          </div>
        {% endif %}

        {% if content.field_category["#items"][0]  %}
          <div class="contact__tags">
            <span>{{ "Categories: " | t }}</span>
            {% for cat in content.field_category["#items"] %}
              <a href={{path('entity.taxonomy_term.canonical', {'taxonomy_term': cat.value.target_id})}}>{{cat.entity.name.value}}</a>
            {% endfor %}
          </div>
        {% endif %}

        {% if content.field_zipcode[0] %}
          <div class="contact__zip">
            <span>{{ "Zip Code: " | t }}</span>

            <div class="contact__zip-wrapper">
              {{ content.field_zipcode }}
              <button class="contact__zip-btn">+<span class="contact__zip-total"></span> more...</button>
            </div>
          </div>
        {% endif %}

      </div>
      <div class="topic-list__rhs">
        <div class="sidebar-btn">
          <div class="sidebar-btn__print">
            <input type="button" value="Print" onClick="window.print()">
          </div>
          {{ drupal_entity('block', 'printlinks_2') }}

        </div>
      </div>
    </div>

  </div>
</article>
