{#
/**
 * @file
 * Bootstrap Barrio's theme implementation to display a node.
 *
 * Available variables:
 * - node: The node entity with limited access to object properties and methods.
     Only "getter" methods (method names starting with "get", "has", or "is")
     and a few common methods such as "id" and "label" are available. Calling
     other methods (such as node.delete) will result in an exception.
 * - label: The title of the node.
 * - content: All node items. Use {{ content }} to print them all,
 *   or print a subset such as {{ content.field_example }}. Use
 *   {{ content|without('field_example') }} to temporarily suppress the printing
 *   of a given child element.
 * - author_picture: The node author user entity, rendered using the "compact"
 *   view mode.
 * - metadata: Metadata for this node.
 * - date: Themed creation date field.
 * - author_name: Themed author name field.
 * - url: Direct URL of the current node.
 * - display_submitted: Whether submission information should be displayed.
 * - attributes: HTML attributes for the containing element.
 *   The attributes.class element may contain one or more of the following
 *   classes:
 *   - node: The current template type (also known as a "theming hook").
 *   - node--type-[type]: The current node type. For example, if the node is an
 *     "Article" it would result in "node--type-article". Note that the machine
 *     name will often be in a short form of the human readable label.
 *   - node--view-mode-[view_mode]: The View Mode of the node; for example, a
 *     teaser would result in: "node--view-mode-teaser", and
 *     full: "node--view-mode-full".
 *   The following are controlled through the node publishing options.
 *   - node--promoted: Appears on nodes promoted to the front page.
 *   - node--sticky: Appears on nodes ordered above other non-sticky nodes in
 *     teaser listings.
 *   - node--unpublished: Appears on unpublished nodes visible only to site
 *     admins.
 * - title_attributes: Same as attributes, except applied to the main title
 *   tag that appears in the template.
 * - content_attributes: Same as attributes, except applied to the main
 *   content tag that appears in the template.
 * - author_attributes: Same as attributes, except applied to the author of
 *   the node tag that appears in the template.
 * - title_prefix: Additional output populated by modules, intended to be
 *   displayed in front of the main title tag that appears in the template.
 * - title_suffix: Additional output populated by modules, intended to be
 *   displayed after the main title tag that appears in the template.
 * - view_mode: View mode; for example, "teaser" or "full".
 * - teaser: Flag for the teaser state. Will be true if view_mode is 'teaser'.
 * - page: Flag for the full page state. Will be true if view_mode is 'full'.
 * - readmore: Flag for more state. Will be true if the teaser content of the
 *   node cannot hold the main body content.
 * - logged_in: Flag for authenticated user status. Will be true when the
 *   current user is a logged-in member.
 * - is_admin: Flag for admin user status. Will be true when the current user
 *   is an administrator.
 *
 * @see template_preprocess_node()
 */
#}
{{ attach_library('bootstrap_barrio/node') }}

{%
  set classes = [
  'node',
  'node--type-' ~ node.bundle|clean_class,
  node.isPromoted() ? 'node--promoted',
  node.isSticky() ? 'node--sticky',
  not node.isPublished() ? 'node--unpublished',
  view_mode ? 'node--view-mode-' ~ view_mode|clean_class,
  'clearfix',
]
%}

{% set title = node.title.value %}
{% set featImg = node.field_featured_image.entity.uri.value %}
{% set featImgAlt = node.field_featured_image.alt %}
{% set topics = node.field_topics %}
{% set tags = node.field_tags %}
{% set files = node.field_attachments %}

<article{{ attributes.addClass(classes) }}>
  {{ drupal_block('dlaw_section_directory') }}
  {# Class 'openadvocate-content' is for dlaw_glossary's ReadClearly JS to detect body #}
  <div{{ content_attributes.addClass('node__content', 'clearfix') }}>

    <div class="page__content-wrapper">
      <div class="page__lhs">
        <div class="page__scrollarea">
          <h1 class="page__title">{{title}}</h1>

          {% if featImg %}
            <img
              class="page__feat-img"
              src="{{ featImg | image_style('featured_image') }}"
              alt="{{ featImgAlt }}"
            />
          {% endif %}

          {{ content.addtoany }}

          <div class="page__body openadvocate-content">
            {{ content | without('field_page_components', 'field_date', 'field_news', 'field_featured_image', 'field_featured_video', 'field_featured_video_url', 'field_attachments', 'field_glossary', 'field_language', 'field_links', 'field_location', 'field_file_preview', 'field_region', 'field_section', 'field_tags','field_topics', 'field_zipcode', 'field_feedback', 'rate_feedback') }}
          </div>
        </div>

        {% if topics %}
          <div class="page__topics">
            {% for topic in topics %}
              {% if topic.entity.name.value %}
              <a href={{path('entity.taxonomy_term.canonical', {'taxonomy_term': topic.entity.tid.value})}}>{{topic.entity.name.value}}</a>
              {% endif %}
            {% endfor %}
          </div>
        {% endif %}

        {% if tags %}
          <div class="page__tags">
            {% for tag in tags %}
              <a href={{path('entity.taxonomy_term.canonical', {'taxonomy_term': tag.entity.tid.value})}}>{{tag.entity.name.value}}</a>
            {% endfor %}
          </div>
        {% endif %}

        {{ content.field_page_components }}

        <div class="page__files">
          {{ content.field_attachments }}
        </div>

        <div class="page__links">
          {{ content.field_links }}
        </div>

        {{ content.rate_feedback }}

        {{ content.field_feedback }}

        {{ drupal_block('dlaw_section_prevnextnav') }}

      </div>

      <div class="page__rhs">

        <div class="sidebar-btn">
          <div class="sidebar-btn__print">
            <input type="button" value="Print" onClick="window.print()">
          </div>
          {{ drupal_entity('block', 'printlinks_2') }}
        </div>

        {{ content.addtoany }}

        <div class="page__toc">
          <p class="toc__header">{{ "Table of Contents" | t }}</p>
          <ul class='toc__content'></ul>
        </div>
      </div>
    </div>

  </div>

</article>

{{ drupal_entity('block', 'views_block__news_block_news_basic_page') }}
{{ drupal_block('dlaw_blocks_testimonials') }}
{{ drupal_entity('block', 'twitterfeedblock') }}
{{ drupal_block('dlaw_blocks_supporters') }}


