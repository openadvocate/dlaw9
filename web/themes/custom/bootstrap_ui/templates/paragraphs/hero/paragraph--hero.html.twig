{#
/**
 * @file
 * Default theme implementation to display a paragraph.
 *
 * Available variables:
 * - paragraph: Full paragraph entity.
 *   Only method names starting with "get", "has", or "is" and a few common
 *   methods such as "id", "label", and "bundle" are available. For example:
 *   - paragraph.getCreatedTime() will return the paragraph creation timestamp.
 *   - paragraph.id(): The paragraph ID.
 *   - paragraph.bundle(): The type of the paragraph, for example, "image" or "text".
 *   - paragraph.getOwnerId(): The user ID of the paragraph author.
 *   See Drupal\paragraphs\Entity\Paragraph for a full list of public properties
 *   and methods for the paragraph object.
 * - content: All paragraph items. Use {{ content }} to print them all,
 *   or print a subset such as {{ content.field_example }}. Use
 *   {{ content|without('field_example') }} to temporarily suppress the printing
 *   of a given child element.
 * - attributes: HTML attributes for the containing element.
 *   The attributes.class element may contain one or more of the following
 *   classes:
 *   - paragraphs: The current template type (also known as a "theming hook").
 *   - paragraphs--type-[type]: The current paragraphs type. For example, if the paragraph is an
 *     "Image" it would result in "paragraphs--type--image". Note that the machine
 *     name will often be in a short form of the human readable label.
 *   - paragraphs--view-mode--[view_mode]: The View Mode of the paragraph; for example, a
 *     preview would result in: "paragraphs--view-mode--preview", and
 *     default: "paragraphs--view-mode--default".
 * - view_mode: View mode; for example, "preview" or "full".
 * - logged_in: Flag for authenticated user status. Will be true when the
 *   current user is a logged-in member.
 * - is_admin: Flag for admin user status. Will be true when the current user
 *   is an administrator.
 *
 * @see template_preprocess_paragraph()
 *
 * @ingroup themeable
 */
#}

{% set title = paragraph.field_hero_title.value %}
{% set subtitle = paragraph.field_hero_subtitle.value %}
{% set searchTitle = paragraph.field_hero_search_title.value %}
{% set link = paragraph.field_hero_link %}

{% set imgs = paragraph.field_hero_image %}
{% set topics = paragraph.field_hero_topics %}

{%
  set classes = [
    'paragraph',
    'paragraph--type--' ~ paragraph.bundle|clean_class,
    view_mode ? 'paragraph--view-mode--' ~ view_mode|clean_class,
    not paragraph.isPublished() ? 'paragraph--unpublished',
    layout == "no_image" ? "no__img",
    layout == "background" ? "bg"
  ]
%}

{% block paragraph %}
  <div{{ attributes.addClass(classes) }}>
    {% block content %}

      <div class="hero__container">
        <div class="hero__content-img">
          <h1 class="heading">{{ title }}</h1>

          <p class="hero__desc">{{ subtitle }}</p>

          {% if link.uri and link.title %}
            {{ link(link.title, link.uri, {'class': ['hero__link']}) }}
          {% endif %}
        </div>
        <div class="hero__img">
          {% for image in imgs %}
            {% set img = image.entity.field_media_image.entity.uri.value %}
            {% if img %}
              <div>
                <img src={{img | image_style("image_with_text_carousel")}} alt={{ image.entity.field_media_image.alt }} width="555" height="370" />
              </div>
            {% endif %}
          {% endfor %}

        </div>
      </div>

      {% if imgs | length > 1 %}
        <div class="slick-custom-arrows">
          <button class="slick-prev hero-slick-custom-prev" aria-label="Previous" type="button" aria-disabled="true">Previous</button>
          <button class="slick-next hero-slick-custom-next" aria-label="Next" type="button" aria-disabled="true">Next</button>
        </div>
        <div class="hero-slick-custom-dots"></div>
      {% endif %}

    {% endblock %}

  </div>

  <div class="hero__search-component">
    {% if searchTitle %}
      <h2>{{searchTitle}}</h2>
    {% endif %}

    <div class="hero__search-wrapper">
      {{ drupal_block('views_exposed_filter_block:search-search') }}
    </div>
  </div>
{% endblock paragraph %}
